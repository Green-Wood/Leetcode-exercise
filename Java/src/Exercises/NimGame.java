package Exercises;
/*
你和你的朋友，两个人一起玩 Nim游戏：桌子上有一堆石头，每次你们轮流拿掉 1 - 3 块石头。 拿掉最后一块石头的人就是获胜者。你作为先手。

你们是聪明人，每一步都是最优解。 编写一个函数，来判断你是否可以在给定石头数量的情况下赢得游戏。

示例:

输入: 4
输出: false
解释: 如果堆中有 4 块石头，那么你永远不会赢得比赛；
     因为无论你拿走 1 块、2 块 还是 3 块石头，最后一块石头总是会被你的朋友拿走。



可以考虑，如果现有1-3块石头，那么你肯定是胜者，如果有4块石头，你肯定是输家。
也就是说，我们不能出现最后剩下4个石头的情况，否则我们就会输掉。
当所给定的石头个数是4的倍数时，无论我们从1-3中选几个，另一个人总可以选3-1个石头，使剩下的石头仍为4的倍数，那么我们不可能获胜。
当所给定的石头不是4的倍数时，我们的目标就是取1-3个石头，使得当对手选石头之前，剩下的石头数为4的倍数。那么我们肯定获胜。
 */
public class NimGame {
    public boolean canWinNim(int n) {
        return (n % 4 != 0);
    }
}
